version: '3.4'

services:
  redis:
    image: "docker.io/library/redis:latest"
    ports:
      - "6379:6379"
    restart: always

  postgres:
    image: "docker.io/library/postgres:latest"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=your_username
      - POSTGRES_PASSWORD=your_password
      - POSTGRES_DB=your_database_name
    volumes:
      - postgres_data:/var/lib/postgresql/data

  aio:
    hostname: pymap.lan
    build:
      context: .
      dockerfile: Dockerfiles/aio/Dockerfile
      args:
        - DJANGO_ENV
        - DJANGO_SETTINGS_MODULE
        - CELERY_BROKER_URL
        - CELERY_RESULT_BACKEND
        - STATIC_ROOT
    ports:
      - "80:80"
    volumes:
      - ./src:/app
      - aio_postgres_data:/var/lib/postgresql/data

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfiles/celery/Dockerfile
      args:
        - DJANGO_ENV
        - DJANGO_SETTINGS_MODULE
        - CELERY_BROKER_URL
        - CELERY_RESULT_BACKEND
    depends_on:
      - redis
    volumes:
      - ./src:/app
      - shared_logs:/var/log/pymap

  django-app:
    build:
      context: .
      dockerfile: Dockerfiles/django/Dockerfile
      args:
        - DJANGO_ENV
        - DJANGO_SETTINGS_MODULE
        - CELERY_BROKER_URL
        - CELERY_RESULT_BACKEND
        - STATIC_ROOT
    stdin_open: true
    tty: true
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - celery-worker
      - postgres
    volumes:
      - ./src:/app
      - shared_logs:/var/log/pymap

  email-server:
    build:
      context: Dockerfiles/email-server
      dockerfile: Dockerfile
    networks:
      - mail
    ports:
      - "2500:2500"
      - "1430:1430"
      - "4650:4650"
      - "9930:9930"

  rainloop:
    build:
      context: Dockerfiles/rainloop
      dockerfile: Dockerfile
    networks:
      - mail
    ports:
      - "8080:8080"
    depends_on:
      - email-server


networks:
  mail:
    driver: bridge

volumes:
  shared_logs:
  postgres_data:
  aio_postgres_data: