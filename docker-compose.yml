services:
  redis:
    image: "docker.io/library/redis:latest"
    ports:
      - "6379:6379"
    restart: always

  postgres:
    image: "docker.io/library/postgres:latest"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST:-127.0.0.1}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
    volumes:
      - pgdata:/var/lib/postgresql/data

  pymap-server:
    build: 
      context: .
      dockerfile: Dockerfiles/nginx/Dockerfile
      args:
        - STATIC_ROOT
        - GROUPNAME
        - GID
    ports:
      - "5000:80"
    depends_on:
      pymap:
        condition: service_healthy
    volumes:
      - static_root:$STATIC_ROOT

  celery-worker:
    &celery_worker
    build:
      context: .
      dockerfile: Dockerfiles/celery/Dockerfile
      args:
        - POSTGRES_DB
        - POSTGRES_USER
        - POSTGRES_PASSWORD
        - POSTGRES_HOST
        - POSTGRES_PORT
        - DJANGO_ENV
        - DJANGO_SETTINGS_MODULE
        - CELERY_BROKER_URL
        - CELERY_RESULT_BACKEND
        - PYMAP_LOGDIR
        - SECRET_KEY
        - GROUPNAME
        - GID
    deploy:
      mode: replicated
      replicas: ${WORKER_REPLICAS:-1}
    entrypoint: /bin/sh -c "sleep 5 && poetry run celery -A pymap.celery worker -l ${WORKER_LOG_LEVEL:-INFO} --concurrency=500 --pool=gevent"
    depends_on:
      redis:
        condition: service_started
    volumes:
      - shared_logs:$PYMAP_LOGDIR
    user: "1001:$GID"  # UID:GID for user
    group_add:
      - $GROUPNAME

  celery-beat:
    <<: *celery_worker
    deploy:
      mode: global
    entrypoint: /bin/sh -c "sleep 10 && poetry run celery -A pymap.celery beat -l ${BEAT_LOG_LEVEL:-INFO} --scheduler django_celery_beat.schedulers:DatabaseScheduler -f $PYMAP_LOGDIR/celery-beat.log"
    depends_on:
      - celery-worker
    volumes:
      - shared_logs:$PYMAP_LOGDIR
    user: "1001:$GID"  # UID:GID for user
    group_add:
      - $GROUPNAME

  celery-flower:
    <<: *celery_worker
    deploy:
      mode: global
    profiles:
      - flower
    entrypoint: /bin/sh -c "poetry run celery -A pymap.celery flower --basic-auth='$FLOWER_ADMIN:$FLOWER_PASSWORD' --address='0.0.0.0'"
    user: "1001:$GID"  # UID:GID for user
    ports:
      - 5555:5555
    group_add:
      - $GROUPNAME

  pymap:
    build:
      context: .
      dockerfile: Dockerfiles/django/Dockerfile
      args:
        - POSTGRES_DB
        - POSTGRES_USER
        - POSTGRES_PASSWORD
        - POSTGRES_HOST
        - POSTGRES_PORT
        - DJANGO_ENV
        - DJANGO_SETTINGS_MODULE
        - CELERY_BROKER_URL
        - CELERY_RESULT_BACKEND
        - STATIC_ROOT
        - PYMAP_LOGDIR
        - SECRET_KEY
        - GROUPNAME
        - GID
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail 127.0.0.1:8000/ || exit 1"]
      interval: 15s
      timeout: 30s
      retries: 5
      start_period: 5s
    ports:
      - "8000"
    depends_on:
      - postgres
      - celery-worker
    volumes:
      - shared_logs:$PYMAP_LOGDIR
      - static_root:$STATIC_ROOT
    user: "1001:$GID"  # UID:GID for user
    group_add:
      - $GROUPNAME

volumes:
  shared_logs:
  pgdata:
  static_root: