worker_processes 1;

user www-data www-data;
# 'user nobody nobody;' for systems with 'nobody' as a group instead
error_log  /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  use epoll;
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
  include mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  access_log /var/log/nginx/access.log combined;
  sendfile on;

  # HTTP server block to redirect to HTTPS
  server {
    listen 80 deferred;
    server_name 0.0.0.0;
    client_max_body_size 4G;

    keepalive_timeout 5;
    access_log  /var/log/nginx/access.log;

    location /static {
        alias ${STATIC_ROOT};
    }

    location / {
      # proxy to app
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://pymap:8000;
    }

    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root ${STATIC_ROOT};
    }
  }

  # HTTPS server block for serving requests over SSL
  server {
    listen 443 ssl deferred;
    server_name 0.0.0.0;
    client_max_body_size 4G;

    keepalive_timeout 5;
    access_log  /var/log/nginx/access.log;

    # SSL settings
    ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location /static {
        alias ${STATIC_ROOT};
    }

    location / {
      # proxy to app
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://pymap:8000;
    }

    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root ${STATIC_ROOT};
    }
  }
}
